// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum roleStatus {
  USER
  ADMIN
}

model User {
  id        Int        @id @default(autoincrement())
  firstName String
  lastName  String
  role      roleStatus @default(USER)
  email     String?    @unique
  username  String?    @unique
  password  String
  address   String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  orders    Order[]
  carts     Cart[]
}

enum buyStatus {
  INCART
  PANDDING
  SUCCESS
}

model Order {
  id         Int         @id @default(autoincrement())
  status     buyStatus
  slipImage  String?
  date       DateTime    @db.Date()
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  userId     Int
  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  price     Decimal  @db.Decimal(10, 2)
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
}

model Product {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  images     String?
  price      Decimal     @db.Decimal(10, 2)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderItems OrderItem[]
  carts      Cart[]
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Cart {
  id        Int      @id @default(autoincrement())
  quantiry  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
}
